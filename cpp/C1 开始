1.1 GNU编译器的编译过程
(1) 预处理：展开头文件，去除注释，宏替换等。文件由.c->.i
(2) 编译：将预处理结果转成汇编代码。文件由.i->.s
(3) 二进制转换：将汇编语句转成二进制代码。文件由.s->.o
(4) 链接：将.o文件与库文件链接一起得到可执行文件
使用命令：g++ test.cc -o test 可以直接得到可执行文件test
使用./test运行程序

1.2 #include<iostream>和#include<iostream.h>的区别
<iostream>是C++标准库中的头文件，在输入输出时，需要在cout/cin前加std::
<iostream.h>是C中的头文件，不需要加std::
其中std是一个命名空间，cout/cin在这个空间内。这样做的好处是，可以有效避免多人开发所引起的重名问题。
对使用的程序，可以加using std::cout;using std::cin;来省略使用std::

1.3 标准库I/O缓冲区设计
(1) 全缓冲：在填满标准I/O缓冲区后才进行I/O操作。如普通文本文件。向文件写入文本时，人为关闭文件(fclose)，或者程序正常结束，就算缓冲区没有填满，内容也会写入文件。
(2) 行缓冲：终端设备的流是行缓冲的，如电脑屏幕。遇到换行符、缓冲区被填满或人为刷新缓冲区fflush(stdout)，满足以上任一条件，都能执行I/O操作。
(3) 不带缓冲：标准出错是不带缓冲，这就使得出错信息能尽快显示出来。
